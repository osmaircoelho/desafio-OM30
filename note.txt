Padrão para commits:

Utilizar o padrão "Conventional Commits" para uma melhor organização e entendimento dos commits.
Exemplo de commit com o padrão "Conventional Commits":

feat: add endpoint for patient creation

This commit adds a new endpoint for creating patients with all the necessary fields and their respective validations.


-------------------------------------------
Legenda [X]=>'Done!'[X]=>'Test'
Requisitos
 [X] Obrigatoriamente para o desenvolvimento do back-end utilizar o framework Laravel.
 [X][X] Obrigatoriamente a API deve estar nos padrões RESTful.
 [X] Desenvolver uma listagem de pacientes com busca, do qual deve-se permitir a adição, edição, visualização e exclusão de cada um dos pacientes.
 [X] Cada paciente deve ter um endereço cadastrado em uma tabela à parte.
 [X] Utilizar para banco de dados PostgreSQL e Redis (Cache e Queue).
 [X] Utilizar migration, factory, faker e seeder.
 [X][X] Criar um endpoint para listagem onde seja possível consultar pacientes pelo nome ou CPF.
 [X][X] Criar um endpoint para obter os dados de um único pacientes (paciente e seu endereço).
 [X][X] Criar endpoints de cadastro contendo os campos e suas respectivas validações
        (Obs: use tudo que o framework(Laravel) te oferece para não criar códigos repetidos e desnecessários):

 [X][X] Criar endpoints de atualização de paciente contendo os campos e suas respectivas validações
 [X][X] Criar um endpoint para excluir um paciente (paciente e seu endereço).
 [X][X] Criar um endpoint para consulta de CEP que implemente a API do ViaCEP e faça cache (Redis) dos dados para futuras consultas
 [X][] Criar um endpoint que faça importação de dados (pacientes) via arquivo .csv e seja processada em queue assincronamente.
 [X][X] Utilizar docker e docker-compose para execução do projeto (queremos avaliar seu conhecimento, seja criativo e não use o Laravel Sail).

Diferenciais que você pode entregar no seu projeto:
 [X] Utilizar algum padrão para commits;
 [] Possuir cobertura de testes unitários de 80% do código (PHP Unit);
 [] Integrar a aplicação ao Laravel Horizon para o monitoramento das queues;
 [] Utilizar o supervisord para o gerenciamento dos serviços necessários para o desenvolvimento e a execução do projeto;
 [] Utilizar elasticsearch para busca otimizada de pacientes;
 [X][X] Paginar a listagem de pacientes;



Instalar o npm install
#RUN apt-get install -y git-core curl build-essential openssl libssl-dev \
# && git clone https://github.com/nodejs/node.git \
# && cd node \
# && ./configure \
# && make \
# && sudo make install
